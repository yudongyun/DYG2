<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://code.jquery.com/jquery-3.6.4.js"></script>
  <script src="/base.js"></script>
  <title>Basic Layout Example</title>
  <link rel="stylesheet" href="pro.css">



  <video id="background-video" autoplay loop muted>
    <source src="/North America 21_9 4k _ USA and Canada.mp4" type="video/mp4">
  </video>


  <script>





    // 그래프 그리기

    let today2 = new Date();
    let korea_today = new Date(today2.getTime() + (9 * 60 * 60 * 1000)); // 국제 표준 + 9시간
    let str_today = korea_today.toISOString().slice(0, 10);


    let ctx;
    $(document).ready(function () {
      ctx = $('#myChart');


      $('#st_dt').add('#end_dt').val(str_today);
      $('#st_dt').add('#end_dt').change(function () {
        // 조건 1 오늘날짜보다 크면 안됌
        // 조건 2 start 가 end 보다 클수 없음 ..
        let st = new Date($('#st_dt').val());
        let end = new Date($('#end_dt').val());

        if (today2 < st || today2 < end) {
          alert("오늘 날짜보다 클 수 없음")
          $(this).val('');
          return
        }
        if (end < st) {
          alert("종료 일자가 더 빠름");
          return;
        }

      })
    })

    $(document).ready(function () {
      $('#btn').click(function () {
        let st_dt = $('#st_dt').val()
        let end_dt = $('#end_dt').val()
        fn_ajax(st_dt, end_dt);
      })
    })

    // 테스트용 fn_ajax('2023-01-01', '2023-05-22');
    function fn_ajax(q_st, q_end) {
      let main_url = "https://api.exchangerate.host/timeseries?base=USD";
      $.ajax({
        url: main_url
        , type: 'get'
        , data: { 'start_date': q_st, 'end_date': q_end }
        , dataType: 'json'
        , success: function (res) {
          // console.log(res);
          let q_data = fn_exchange_dataset(res)
          // let country = q_data['KRW'];
          let country = ['KRW', 'JPY', 'USD', 'EUR', 'CNY'];
          let sel_data = [];
          for (let i in country) {
            sel_data.push(q_data[country[i]]);
          }

          console.log(country)
          let myChart = new Chart(ctx, {
            type: 'line'
            , data: {
              labels: q_data.labels
              , datasets: sel_data // 특정 국가 지정 셀 데이터 자체가 들어가면 된다.
              , backgroundColor: 'rgba(255, 99, 132, 0.2)' // 배경 색상 설정
              , borderColor: 'rgba(255, 99, 132, 1)', // 테두리 색상 설정
            }, options: {
              element: { line: { tension: 0.1 } }
            }// , animation : {duration : 5000 , easing : 'linear'}
          })
        }
      });
    }



    /* 금 시세 조회 API 시작 */

    // API 인증키
    let apiKey = '9c%2BtVJs8rT88jWwYAQdcazcCB2zOfNFd%2BsAOhSBj84K%2FHpwlgdGIfifJ9kimFP8bfz8sad5NWPRT51VDBh6ycg%3D%3D';

    // 오늘 날짜 계산
    let today = new Date().toISOString().slice(0, 10);

    // API 요청 매개변수
    let todayApiUrl = `https://apis.data.go.kr/1160100/service/GetGeneralProductInfoService/getGoldPriceInfo?serviceKey=${apiKey}&pageNo=1&numOfRows=1&startDt=${today}&endDt=${today}`;
    let last7DaysApiUrl = `https://apis.data.go.kr/1160100/service/GetGeneralProductInfoService/getGoldPriceInfo?serviceKey=${apiKey}&pageNo=1&numOfRows=7`;
    let last30DaysApiUrl = `https://apis.data.go.kr/1160100/service/GetGeneralProductInfoService/getGoldPriceInfo?serviceKey=${apiKey}&pageNo=1&numOfRows=30`;
    let last365DaysApiUrl = `https://apis.data.go.kr/1160100/service/GetGeneralProductInfoService/getGoldPriceInfo?serviceKey=${apiKey}&pageNo=1&numOfRows=365`;
    let last1095DaysApiUrl = `https://apis.data.go.kr/1160100/service/GetGeneralProductInfoService/getGoldPriceInfo?serviceKey=${apiKey}&pageNo=1&numOfRows=1095`;
    let last3650DaysApiUrl = `https://apis.data.go.kr/1160100/service/GetGeneralProductInfoService/getGoldPriceInfo?serviceKey=${apiKey}&pageNo=1&numOfRows=3650`;

    // API 요청 함수
    function fetchGoldPrices(url) {
      return fetch(url)
        .then(response => response.text())
        .then(data => {
          let parser = new DOMParser();
          let xmlDoc = parser.parseFromString(data, 'text/xml');
          let items = xmlDoc.getElementsByTagName('item');
          let goldPrices = [];

          for (let i = 0; i < items.length; i++) {
            let clpr = items[i].getElementsByTagName('clpr')[0].textContent;
            goldPrices.push(parseInt(clpr));
          }

          return goldPrices;
        });
    }

    // 데이터 가져오기 및 표시
    Promise.all([
      fetchGoldPrices(todayApiUrl),
      fetchGoldPrices(last7DaysApiUrl),
      fetchGoldPrices(last30DaysApiUrl),
      fetchGoldPrices(last365DaysApiUrl),
      fetchGoldPrices(last1095DaysApiUrl),
      fetchGoldPrices(last3650DaysApiUrl)
    ])
      .then(([todayPrices, last7DaysPrices, last30DaysPrices, last365DaysPrices, last1095DaysPrices, last3650DaysPrices]) => {
        // 데이터 표시
        let goldPriceElement = document.getElementById('gold-price');
        goldPriceElement.innerHTML = `
      오늘 기준 금 시세: ${todayPrices[0]}원<br>
      <br>
      <br>
      최근 7일간의 금 시세 평균: ${calculateAverage(last7DaysPrices)}원<br>
      <br>
      <br>
      최근 30일간의 금 시세 평균: ${calculateAverage(last30DaysPrices)}원<br>
      <br>
      <br>
      최근 1년간의 금 시세 평균: ${calculateAverage(last365DaysPrices)}원<br>
      <br>
      <br>
      최근 3년간의 금 시세 평균: ${calculateAverage(last1095DaysPrices)}원<br>
      <br>
      <br>
      최근 10년간의 금 시세 평균: ${calculateAverage(last3650DaysPrices)}원<br>
      <br>
      <br>
    `;
      })
      .catch(error => {
        console.error('API 요청 에러:', error);
      });

    // 평균 계산 함수
    function calculateAverage(prices) {
      let sum = prices.reduce((total, price) => total + price, 0);
      return (sum / prices.length).toFixed(0);
    }
    /* 금 시세 조회 API 종료 */

    function selectCurrency(currency) {
      $('#toCurrency').text(currency);
      $('#toCountry').val(currency);
    }


    /* =============================================================================== */


    function calculateExchange() {
      // 입력한 달러 값 가져오기
      var depositAmount = document.getElementById("deposit").value;

      // 선택한 환전 국가 가져오기
      var selectedCurrency = document.getElementById("currencySelect").value;

      // 현재 날짜를 가져오는 부분 추가
      var currentDate = new Date().toISOString().split('T')[0];

      // 환율 정보를 가져오는 API 호출
      var apiUrl = `https://api.exchangerate.host/convert?from=USD&to=${selectedCurrency}&amount=${depositAmount}&date=${currentDate}`;

      fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
          var result = data.result;

          if (result) {
            // 결과 출력
            document.getElementById("recipient").value = result.toFixed(2); // 결과를 소수점 2자리까지 출력
          } else {
            console.log("환율 정보를 가져올 수 없습니다.");
          }
        })
        .catch(error => {
          console.error('API 요청 에러:', error);
        });
    }


    /* 슬라이드 */
    var currentSlide = 0;
    var slides;
    var slideNav;




    function showSlide(slideIndex) {
      console.log(slides);
      slides.forEach(function (slide) {
        slide.style.display = 'none';
      });
      slides[slideIndex].style.display = 'block';
    }

    function nextSlide() {
      currentSlide++;
      if (currentSlide >= slides.length) {
        currentSlide = 0;
      }
      showSlide(currentSlide);
    }

    function prevSlide() {
      currentSlide--;
      if (currentSlide < 0) {
        currentSlide = slides.length - 1;
      }
      showSlide(currentSlide);
    }

    window.onload = function () {

      slides = document.querySelectorAll('.slide');
      slideNav = document.querySelector('.slide-nav');
      // 페이지 로드 시 초기 슬라이드 표시
      showSlide(currentSlide);
      // 다음 버튼 클릭 시
      document.querySelector('.slide-nav .next-button').addEventListener('click', function () {
        nextSlide();
      });
      // 이전 버튼 클릭 시
      document.querySelector('.slide-nav .prev-button').addEventListener('click', function () {
        prevSlide();
      });
    }

    // 뉴스 검색 api
    $(document).ready(function () {
      $('#btn1').click(function () {
        let text = $('#q_input').val();
        fn_search(text);
      });
    });

    function fn_search(msg) {
      $.ajax({
        url: 'http://192.168.1.32:3000/search',
        data: {
          'query': msg,
          'display': 100
        },
        type: 'get',
        success: function (res) {
          $.each(res['items'], function (i, v) {
            let newsCard = '<div class="news-card">';
            newsCard += '<p class="title"><a href="' + v['originallink'] + '">' + v['title'] + '</a></p>';
            newsCard += '<p class="description">' + v['description'] + '</p>';
            newsCard += '</div>';
            $('#div_id').append(newsCard);
          });
        },
        error: function (e) {
          console.log('error: ', e);
        }
      });
    }


  </script>



</head>

<body>
  <header>
    <div class="logo" id="mainlogo">
      <a href="http://192.168.1.32:3000">ECONO[VIEW]</a>
    </div>


    <nav>
      <a href="/loginPage">로그인 </a>
      <a href="/signPage">회원가입</a>
      <a href="/mypage">마이페이지</a>
      <a href="https://www.instargram.com"><img src="/인스타그램.png" alt="instargram"
          style="width: 25px; height: 25px;"></a>
      <a href="https://www.twitter.com"><img src="/트위터.png" alt="twitter" style="width: 25px; height: 25px;"></a>
    </nav>
  </header>
  <main>


    <!-- 첫 번째 슬라이드 - 환율 조회 창 -->
    <!-- 환율 조회 창 시작-->
    <div class="slide-container">
      <div class="slide active">
        <div class="exchange-calc">
          <div class="desc">
            <h2>오늘의 환율 조회</h2>
          </div>
          <div class="form-group deposit">
            <h5 for="deposit">달러 입력</h5>
            <div class="input-group">
              <button class="btn dropdown-toggle" onkeyup="this.value=this.value.replace(/[^0-9,]/g,'');">
                <div class="currency US">USD(달러)</div>
                <input type="hidden" id="toCountry" value="US">
              </button>
              <input type="text" value="" class="form-control-plaintext text-right" id="deposit"
                placeholder="숫자만 입력해주세요" onkeyup="this.value=this.value.replace(/[^0-9,]/g,'');">
              <button onclick="calculateExchange()">변환</button> <!-- 수정: calculateExchange() 함수 호출 버튼 -->
            </div>
          </div>
          <div class="form-group recipient">
            <h5 for="recipient">변경 후 금액</h5>
            <div class="input-group">
              <select id="currencySelect" onchange="selectCurrency(this.value)">
                <option value="KRW">KRW / 원</option>
                <option value="JPY">JPY / 엔</option>
                <option value="USD">USD / 달러</option>
                <option value="EUR">EUR / 유로</option>
                <option value="CNY">CNY / 위안</option>
              </select>
              <input type="text" value="" class="form-control-plaintext text-right" id="recipient"
                placeholder="계산된 금액이 출력됩니다.">
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- 환율 조회 창 끝-->


    <!-- 금 시세 조회 창 시작-->
    <div class="slide">
      <div class="rand-calc">
        <h2 style="color: rgb(176, 154, 27);">금 시세 조회
          <p style="font-size: 12px;">( 출처 : 금융위원회 )</p>
        </h2>
        <div id="gold-price"></div>
      </div>
    </div>
    <!-- 시세 조회 창 끝-->

    <!-- 환율그래프 창 시작 -->
    <div class="slide">
      <div class="kospi-calc">
        <h2>환율 그래프</h2>
        <p>날짜를 선택하고 조회 버튼을 클릭해주세요</p>
        <input type="date" id="st_dt" style="background-color: rgb(113, 231, 231);">
        <input type="date" id="end_dt" style="background-color: rgb(113, 231, 231);">
        <button type="button" id="btn" style="background-color: rgb(107, 216, 123);">조회</button>
        <div style="width: 600px; height: 400px; top: 20%; left: 50%;">
          <canvas id="myChart" width="700px" height="500px" style="top: 30%; left: 50%;"></canvas>
        </div>
      </div>
    </div>
    <!-- 환율그래프 창 끝 -->





    <!--뉴스 카드 시작-->
    <div class="slide">
      <div class="news-card1">
        <input type="text" id="q_input" placeholder="뉴스 키워드를 검색하세요">
        <button type="button" id="btn1">검색</button>
        <div id="div_id"></div>
      </div>
    </div>
    <!--뉴스 카드 끝-->

    <div class="text-logo">
      <strong>ALL IN<br><span>ONE PAGE</span></strong>
      <p>Pass by EconoView</p>
    </div>
    <div class="slide-nav">
      <button class="prev-button">
        <img src="/왼쪽.png" alt="이전 화면" style="width: 35px; height: 35px;">
      </button>
      <button class="next-button">
        <img src="/오른쪽.png" alt="다음 화면" style="width: 35px; height: 35px;">
      </button>
    </div>


  </main>
</body>

</html>